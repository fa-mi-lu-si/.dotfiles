(defwidget bar []
  (centerbox
    :orientation "v"
    :class "bar"
    (box :valign "start"
      (top))
    (box :valign "center"
      (middle))
    (box :valign "end"
      (bottom))))

(defwidget niri-workspace-widget [monitor]
  (box
    :class "indicator"
    :orientation "v"
    :spacing 10
    ; TODO: make this monitor specific, with a jq filter
    (for i in {jq(niri-workspaces, ".=sort_by(.idx)")}
      (button
        :onclick "niri msg action focus-workspace ${i.idx}"
        {i.is_focused ? "◆" : "◇"}))))

(defwidget time []
  (box
    :class "indicator"
    :orientation "v"
    hour
    min))

(defwidget network_icon []
  (box
    :class "indicator"
    :orientation "v"
    :visible {network.name != ""}
    {network.icon}))

(defwidget battery []
  (box
    :class "indicator"
    :orientation "v"
    ; use for loop to support different battery names
    { EWW_BATTERY.BAT1.status == "Full" ? "󱟢" :
      EWW_BATTERY.BAT1.status == "Charging" ? "󰚥" :
      EWW_BATTERY.BAT1.capacity <= 10 ? "󰂃" :
      EWW_BATTERY.BAT1.capacity <= 20 ? "󰂃" :
      EWW_BATTERY.BAT1.capacity <= 30 ? "󰁻" :
      EWW_BATTERY.BAT1.capacity <= 40 ? "󰁼" :
      EWW_BATTERY.BAT1.capacity <= 50 ? "󰁽" :
      EWW_BATTERY.BAT1.capacity <= 60 ? "󰁾" :
      EWW_BATTERY.BAT1.capacity <= 70 ? "󰁿" :
      EWW_BATTERY.BAT1.capacity <= 80 ? "󰂀" :
      EWW_BATTERY.BAT1.capacity <= 90 ? "󰂁" :
      EWW_BATTERY.BAT1.capacity <= 100 ? "󰂂" :
      ""}
    {EWW_BATTERY.BAT1.capacity}))

(defwidget player-button []
  (box
    :class "indicator"
    :orientation "v"
    :visible {status != ""}
    (button
      :onclick "playerctl play-pause"
      :onrightclick "eww -c ${EWW_CONFIG_DIR} open player-window"
      (box
        :orientation "v"
        "󰲸"
        {
          status == "Playing" ? "":
          status == "Paused" ? "":
          status == "Stopped" ? "":
          "󰝛"}))))

(defwidget tray []
  (box
    :class "indicator"
    (systray
      :orientation "v"
      :icon-size 16
      :prepend-new true)))

(defwidget top []
  (box (niri-workspace-widget :monitor 0)))

(defwidget middle []
  (time))

(defwidget bottom []
  (box
    :orientation "v"
    :space-evenly false
    ; TODO: collapsible systray
    (tray)
    (player-button)
    (battery)
    (network_icon)))

(defwindow sidebar
  :monitor "eDP-1"
  :stacking 'fg'
  :geometry (geometry :x 0 :y 0 :height "100%" :width "48px" :anchor "center left")
  ; :exclusive true
  (bar))
