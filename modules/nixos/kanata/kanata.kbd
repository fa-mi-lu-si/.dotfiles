(defsrc
  tab  q    w    e    r    t     y    u    i    o    p    [
   caps a    s    d    f    g     h    j    k    l    scln '
     lsft  z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rctl
)


(defalias

  qwe (layer-switch qwerty)

  nav (tap-hold-press 150 250
    (layer-switch navigation)
    (multi (layer-while-held navigation) nop0))

  ml2 lmet

  ;; experiment with mod forks on the tap action here
  ;; eg super-col
  col (fork
    (tap-hold-release 150 250
      (layer-switch colemak)
      (layer-while-held mouse))
    esc
    (nop0))

  ;; spacebar makes symbols more comfortable
  spa (tap-hold-release 150 250 spc (layer-while-held symbols))
  rts (tap-hold-release 150 250 ret (layer-while-held symbols))

  ;; home row mods for colemak
  m_a (tap-hold-release 150 250 a lmet)
  a_r (tap-hold-release 150 250 r lalt)
  c_s (tap-hold-release 150 250 s lctl)
  s_t (tap-hold-release 150 250 t lsft)
  s_n (tap-hold-release 150 250 n rsft)
  c_e (tap-hold-release 150 250 e rctl)
  a_i (tap-hold-release 150 250 i ralt)
  m_o (tap-hold-release 150 250 o rmet)

  qQ (tap-hold 100 400 q M-q)
)


(deflayer colemak
  tab  @qQ  w    f    p    b     j    l    u    y    scln S--
   esc  @m_a @a_r @c_s @s_t g     m    @s_n @c_e @a_i @m_o '
     XX    x    c    d    v    z    k    h    ,    .    /    rsft
  lctl @ml2 @nav           @spa           @col XX
)

(defchords nav-chords 150
  (vd py vu) prnt
  (   py   ) MediaPlayPause
  (   py vu) MediaTrackNext
  (vd py   ) MediaTrackPrevious
  (      vu) VolumeUp
  (vd      ) VolumeDown
  (vd    vu) VolumeMute
)

(defalias
  py (chord nav-chords py)
  vu (chord nav-chords vu)
  vd (chord nav-chords vd)
)

(deflayer navigation
  _    @qQ  @vd  @py  @vu  XX    XX   pgup up   pgdn XX   _
   esc  lmet lalt lctl lsft XX    f9   left down rght tab  _
     XX    XX   XX   del   XX   XX   XX   home menu end  XX   rsft
  _    @ml2 @nav           @rts           @col XX
)


#|

%    &    +    `    \      .    1    2    4    8
!    :    -    =    /      *    '"   ([<  )]>  ?
XX   |    #    _    @      ^    $~   {    }    XX

|#

(defchords symbol-chords 150
  ;; home row keys
  ;; ( ex co da eq  sq pl pr qu )
  ( ex                       ) (macro S-1)
  (    co                    ) (macro S-scln)
  (       da                 ) -
  (          eq              ) =
  (              sq          ) '
  (                 pl       ) S-9
  (                    pr    ) S-0
  (                       qu ) S-/
  ;; some other keys
  (       plu                ) S-=
  (          bt              ) `
  (    am                    ) S-7

  ;; coding chords
  (      plu bt              ) (macro S-`)     ;; ~
  (              sq pl       ) (macro S-')     ;; "
  (    co da                 ) (macro S-scln S-scln) ;; ::
  (    am        sq          ) (macro S-7 ') ;; &'
  (    am        sq pl       ) (macro S-7 m u t) ;; &mut
  (       da eq              ) (macro = =)     ;; ==
  ( ex       eq              ) (macro S-1 =)   ;; !=
  (      plu eq              ) (macro + =)     ;; +=
  
  (                 pl pr    ) (macro S-9 S-0) ;; ()
  (          eq     pl pr    ) (macro [ ])     ;; []
  (          eq     pl       ) (macro [)       ;; [
  (          eq        pr    ) (macro ])       ;; ]
  (    co           pl       ) (macro S-,)     ;; <
  (    co              pr    ) (macro S-.)     ;; >
  (    co    eq     pl       ) (macro S-, =)   ;; <=
  (    co    eq        pr    ) (macro S-. =)   ;; >=

  (    co da           pr    ) (macro - S-.)   ;; ->
  (    co da eq        pr    ) (macro = S-.)   ;; =>

  (          eq  sq          ) (macro caps)    ;; caps

  ;; numbers
  ;; binary numchords
  ( plu   2 ) (tap-hold 100 400 Digit0 XX)
  ( 1       ) (tap-hold 100 400 Digit1 f1)
  (   2     ) (tap-hold 100 400 Digit2 f2)
  ( 1 2     ) (tap-hold 100 400 Digit3 f3)
  (     4   ) (tap-hold 100 400 Digit4 f4)
  ( 1   4   ) (tap-hold 100 400 Digit5 f5)
  (   2 4   ) (tap-hold 100 400 Digit6 f6)
  ( 1 2 4   ) (tap-hold 100 400 Digit7 f7)
  (       8 ) (tap-hold 100 400 Digit8 f8)
  ( 1     8 ) (tap-hold 100 400 Digit9 f9)
  (   2   8 ) (tap-hold 100 400 Digit0 f10)
  ( 1 2   8 ) f11
  (     4 8 ) (tap-hold 100 400 XX f12)
  ( 1   4 8 ) XX
  (   2 4 8 ) XX
  ( 1 2 4 8 ) XX
)

(defalias
  ex (chord symbol-chords ex)
  co (chord symbol-chords co)
  da (chord symbol-chords da)
  eq (chord symbol-chords eq)

  sq (chord symbol-chords sq)
  pl (chord symbol-chords pl)
  pr (chord symbol-chords pr)
  qu (chord symbol-chords qu)

  bl S-[
  br S-]

  n1 (chord symbol-chords 1)
  n2 (chord symbol-chords 2)
  n4 (chord symbol-chords 4)
  n8 (chord symbol-chords 8)

  ds S-4
  bt (chord symbol-chords bt)
  plu (chord symbol-chords plu)
  am (chord symbol-chords am)
)


(deflayer symbols
  XX   S-5  @am  @plu @bt  \   .  @n1  @n2  @n4  @n8  [
   XX   @ex  @co  @da  @eq  /     S-8  @sq  @pl  @pr  @qu  '
     XX    S-\  S-3  S--  S-2    spc  S-6    @ds  @bl  @br  XX   rsft
  XX   XX   bspc           spc            XX   XX
)


(defalias
  scr nop0 ;; scrolling key
  ma↑ (fork (movemouse-accel-up 2 500 1 4) (mwheel-up 50 120) (nop0))
  ma← (fork (movemouse-accel-left 2 500 1 4) (mwheel-left 50 120) (nop0))
  ma↓ (fork (movemouse-accel-down 2 500 1 4) (mwheel-down 50 120) (nop0))
  ma→ (fork (movemouse-accel-right 2 500 1 4) (mwheel-right 50 120) (nop0))
)

(deflayer mouse
  lrld XX   XX   XX   XX   XX    XX   XX   @ma↑ XX   XX   _
   XX   lmet lalt lctl lsft mmid  XX   @ma← @ma↓ @ma→ XX   _
     XX    XX   XX   @scr XX   XX   XX   XX   XX   XX   XX   _
  @qwe XX   mrgt           mlft           XX   XX
)

(defalias
  ctb (fork tab (layer-switch colemak) (ralt))
)
(deflayer qwerty
  @ctb q    w    e    r    t     y    u    i    o    p    [
   caps a    s    d    f    g     h    j    k    l    scln '
     lsft  z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rctl
)
